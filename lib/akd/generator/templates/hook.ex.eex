defmodule <%= @name %> do
  @moduledoc """
  A Custom Hook module generate by Akd.

  TODO: Update Documentation
  """

  use Akd.Hook

  @default_opts [run_ensure: true, ignore_failure: false]

  def get_hooks(deployment, opts \\ []) do
    opts = uniq_merge(opts, @default_opts)
    # Replace this with some destination
    destination = Akd.Destination.local(".")

    # For more information check out Akd.Dsl.FormHook
    form_hook opts do
      main "main command", destination, cmd_env: [{"SOME_ENV", "some_values"}]

      ensure "ensure command", destination

      rollback "rollback command", destination
    end
  end

  # This function takes two keyword lists and merges them keeping the keys
  # unique. If there are multiple values for a key, it takes the value from
  # the first value of keyword1 corresponding to that key.
  defp uniq_merge(keyword1, keyword2) do
    keyword1
    |> Keyword.merge(keyword2)
    |> Keyword.new()
  end
end
